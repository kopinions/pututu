#+TITLE: CPU & GPU 内存架构
#+AUTHOR: 孙建康（rising.lambda）
#+EMAIL:  rising.lambda@gmail.com
#+DATE: 2021-04-06
#+UPDATED: 2021-04-06
#+LAYOUT: post
#+EXCERPT:  
#+DESCRIPTION: 
#+TAGS: 
#+CATEGORIES: 
#+PROPERTY:    header-args        :comments org
#+PROPERTY:    header-args        :mkdirp yes
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil \n:t
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+BIND:        org-preview-latex-image-directory "memory_architecture"
#+OPTIONS:     tex:imagemagick
#+LATEX_HEADER:\usepackage{xeCJK}
#+LATEX_HEADER:\setCJKmainfont{Heiti SC}


如何让一个 CPU 运转起来呢？很简单， 向 CPU 提供指令和数据就可以。数据和指令都被存储在存储器中，也就是我们常说的内存。
在硬件上，我们通过线将 CPU 和 内存连接起来就可以。一个经典的冯诺依曼计算机的入如下所示：

图中主要有三种类型的数据通路，指令，数据，控制。这些通路的连线被称之为总线。获取指令（指令也是数据）和数据基本上都是通过下面的步骤完成的：

1. CPU 给出需要获取数据的地址
2. CPU 给出控制信号进行设备控制
3. 设备将数据放在数据线上
4. CPU 去读取数据

根据常见的使用场景，总线大概分为几类，地址总线，数据总线，控制总线
   
*** CPU 如何去获取指令和数据
  CPU 如何去获取指令和数据呢？

*** CPU 如何去控制外设
  CPU 访问的设备一般会有内存和外设寄存器。

*** CPU 如何去控制外设的内存
    
*** 优化

    
  参考：
- [[http://imgtec.eetrend.com/d6-imgtec/forum/2018-03/11344.html][GPU 与 CPU 的数据交互]]
- [[https://baike.baidu.com/item/CPU%E6%80%BB%E7%BA%BF][CPU 总线]]
- [[https://zhuanlan.zhihu.com/p/322449118][CPU 确定物理地址的玄机]]
- [[https://www.pianshen.com/article/3911591128/][PCIe 内存地址空间]]
- [[https://www.shangmayuan.com/a/480520689a2d466d997e8d44.html][CPU GPU 协同工作]]
