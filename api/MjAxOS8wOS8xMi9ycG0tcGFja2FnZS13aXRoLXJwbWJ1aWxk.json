{"title":"RPM 安装包制作","date":"2019-09-12T11:18:20.000Z","date_formatted":{"ll":"2019年9月12日","L":"2019/09/12","MM-DD":"09-12"},"link":"2019/09/12/rpm-package-with-rpmbuild","tags":["linux package devops"],"categories":["devops","linux","package"],"updated":"2021-04-05T00:00:00.000Z","content":"<h2 id=\"rpm-安装包制作教程\">RPM 安装包制作教程<a title=\"#rpm-安装包制作教程\" href=\"#rpm-安装包制作教程\"></a></h2>\n<h3 id=\"安装必要的软件包\">安装必要的软件包<a title=\"#安装必要的软件包\" href=\"#安装必要的软件包\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install rpm-build</span><br><span class=\"line\">yum install rpmdevtools</span><br><span class=\"line\"># 创建 rpm build 的目录结构</span><br><span class=\"line\">rpmdev-setuptree</span><br></pre></td></tr></table></figure>\n<p>我们可以通过如下命令来找到 rpmbuid 工作目录（rpm 所有的构建，运行命令都是在这个目录下进行）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpmbuild --showrc | grep topdir</span><br><span class=\"line\"># 类似 _topdir %&#123;echo $HOME&#125;/rpmbuild</span><br></pre></td></tr></table></figure>\n<p>rpmbuild 典型的目录结构为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpmbuild</span><br><span class=\"line\">├── BUILD</span><br><span class=\"line\">├── BUILDROOT</span><br><span class=\"line\">├── RPMS</span><br><span class=\"line\">├── SOURCES</span><br><span class=\"line\">├── SPECS</span><br><span class=\"line\">└── SRPMS</span><br></pre></td></tr></table></figure>\n<h3 id=\"准备要构建的源码包\">准备要构建的源码包<a title=\"#准备要构建的源码包\" href=\"#准备要构建的源码包\"></a></h3>\n<p>因为 rpmbuild 只支持 tar.gz 格式的源文件包， 所以我们需要将源码包以 tar.gz 的方式进行打包</p>\n<p>假设我们想要打包的软件名称为 wechat, 我们现在的目录结构如下所示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wechat</span><br><span class=\"line\">├── include</span><br><span class=\"line\">│   └── wechat.h</span><br><span class=\"line\">└── lib</span><br><span class=\"line\">    ├── libwechat.so</span><br><span class=\"line\">    └── libwechat.so.0</span><br></pre></td></tr></table></figure>\n<p>这种情况下我们可以可以使用如下的命令将所有文件进行压缩</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd wechat</span><br><span class=\"line\">tar -czvf wechat-1.0.0.tar.gz *</span><br></pre></td></tr></table></figure>\n<p>因为 rpm 默认的会在 SOURCES 文件下找到所有的源码包，所以我们需要将我们的源码包移动到 <code>$&#123;HOME&#125;/rpmbuild/SOURCES</code> 目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv wechat-1.0.0.tar.gz $&#123;HOME&#125;/rpmbuild/SOURCES</span><br></pre></td></tr></table></figure>\n<h3 id=\"准备-rpm-构建描述文件（spec文件）\">准备 rpm 构建描述文件（spec文件）<a title=\"#准备-rpm-构建描述文件（spec文件）\" href=\"#准备-rpm-构建描述文件（spec文件）\"></a></h3>\n<p>假设我们的 spec 的文件名为 wechat.spec. 一般情况下我们会将 rpm 包描述文件放置在 <code>$&#123;HOME&#125;/rpmbuild/SPECS</code> 目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name: wechat</span><br><span class=\"line\">Version: 1.0.0</span><br><span class=\"line\">Release: 1%&#123;?dist&#125;</span><br><span class=\"line\">Summary: wechat software</span><br><span class=\"line\"></span><br><span class=\"line\">Group: Tencent</span><br><span class=\"line\">License: GPL</span><br><span class=\"line\">URL: https://github.com/sjkyspa/wechat.git</span><br><span class=\"line\">Source0: %&#123;name&#125;-%&#123;version&#125;.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">%description</span><br><span class=\"line\">The test wechat software rpm build package</span><br><span class=\"line\"></span><br><span class=\"line\">%prep</span><br><span class=\"line\">%setup -c -n %&#123;name&#125;-%&#123;version&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%build</span><br><span class=\"line\"></span><br><span class=\"line\">%install</span><br><span class=\"line\">mkdir -p %&#123;buildroot&#125;/usr/lib</span><br><span class=\"line\">mkdir -p %&#123;buildroot&#125;/usr/include</span><br><span class=\"line\">cp -rf lib/* %&#123;buildroot&#125;/usr/lib</span><br><span class=\"line\">cp -rf include/* %&#123;buildroot&#125;/usr/include</span><br><span class=\"line\"></span><br><span class=\"line\">%files</span><br><span class=\"line\">/usr/include/*</span><br><span class=\"line\">/usr/lib/*</span><br></pre></td></tr></table></figure>\n<p>上面有集中类型的描述信息</p>\n<ul>\n<li>rpm 包的元信息：包括 Name， Version，Release，Summary， Group，License， URL， %description</li>\n<li>rpm 构建信息：包括 Source0， 用来指定构建用到的源码包</li>\n<li>rpm 构建阶段指令信息： 包括 %prep，%build，%install，%files</li>\n</ul>\n<p>rpm 包的元信息主要用来描述 rpm 包的基本信息，这个字段在后面可以通过对应环境变量来进行访问，比如：%{name}，%{version}</p>\n<p>rpm 构建阶段的指令, rpmbuild 将构建分为了多个阶段，每个阶段解释如下：</p>\n<ol>\n<li>\n<p>%prep (准备阶段 prepare）</p>\n<p>最先开始的阶段，一般情况下我们使用 %setup 指令将源码包进行解压缩。这里着重解释下两个参数，-c 就是解压前先创建相应的目录，然后在解压缩，-n 就是以这个名字命名目录，所以 %setup -c -q 就是将代码包解压到 %{name}-%{version} 的目录下。解压后的文件会被放到 <code>$&#123;HOME&#125;/rpmbuild/BUILD</code> 目录下</p>\n</li>\n<li>\n<p>%build (构建阶段）</p>\n<p>在解压后，rpmbuild 会在 <code>$&#123;HOME&#125;/rpmbuild/BUILD</code> 目录下运行构建指令，常见的指令有 make，当然 rpmbuild也提供了一个 %make 宏来完成 make 命令</p>\n</li>\n<li>\n<p>%install （安装阶段）</p>\n<p>整个 install 的阶段就是将构建好的文件从 <code>$&#123;HOME&#125;/rpmbuild/BUILD</code> 目录转移到 <code>$&#123;HOME&#125;/rpmbuild/BUILDROOT</code> 下的过程，rpm 相当于把 <code>$&#123;HOME&#125;/rpmbuild/BUILDROOT</code> 下编译好的文件直接进行打包。 一般在这个阶段下会运行 <code>make install</code> 命令，但是我们此处只需要将一些文件放在指定的目录，所以我们可以直接使用 cp 命令将我们的文件拷贝到指定的目录。此处的 %{buildroot} 就是 <code>$&#123;HOME&#125;/rpmbuild/BUILDROOT</code>, 当被安装的时候，就会变成 /</p>\n</li>\n<li>\n<p>%files （指定文件）</p>\n<p>整个打包的过程首先在 <code>$&#123;HOME&#125;/rpmbuild/BUILDROOT</code> 完成整个安装过程。rpmbuild 会将 %files 节指定的文件都放进打出的 rpm 包</p>\n</li>\n</ol>\n<p>当然整个 rpmbuild 还有一些其他的阶段，在这里就不多做介绍了，详细请参见 <a href=\"https://rpm-guide.readthedocs.io/en/latest/rpm-guide.html\" target=\"_blank\">rpm 指南</a></p>\n<h3 id=\"打包\">打包<a title=\"#打包\" href=\"#打包\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd $&#123;HOME&#125;/rpmbuild/SPECS</span><br><span class=\"line\">rpmbuild -bb wechat.spec</span><br></pre></td></tr></table></figure>\n<p>如果运行正常就会在 <code>$&#123;HOME&#125;/rpmbuild/RPMS</code> 出现我们用 rpmbuild 打好的安装包</p>\n<h3 id=\"常见的问题\">常见的问题<a title=\"#常见的问题\" href=\"#常见的问题\"></a></h3>\n<h5 id=\"installed-（but-unpackaged）-file(s)-found\">Installed （but unpackaged） file(s) found<a title=\"#installed-（but-unpackaged）-file(s)-found\" href=\"#installed-（but-unpackaged）-file(s)-found\"></a></h5>\n<p>这种情况一般是因为 %files 章节没有指定需要 rpmbuild 放进 rpm 包的文件，所以 rpmbuild 包不知道包内包含什么内容，所以报错。</p>\n<h5 id=\"rpm-conflict-with-existing-xxx\">rpm conflict with existing xxx<a title=\"#rpm-conflict-with-existing-xxx\" href=\"#rpm-conflict-with-existing-xxx\"></a></h5>\n<p>这种情况一般是因为我们在我们 %files 章节， 指定文件的时候，使用了 <code>/usr/include/</code> 这种方式，但是一般情况下，这个目录是系统自己带的目录，所以会产生冲突。所以指定文件的时候，如果需要指定一个目录的文件可以通过 <code>/usr/include/*</code> 的方式指定</p>\n<h3 id=\"打包过程中常会用到的命令\">打包过程中常会用到的命令<a title=\"#打包过程中常会用到的命令\" href=\"#打包过程中常会用到的命令\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查询安装包内的文件情况</span><br><span class=\"line\">rpm -qpl xxx.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"># 查询系统中安装包的情况，一般出现冲突的时候，查看</span><br><span class=\"line\">rpm -ql xxxx</span><br><span class=\"line\"></span><br><span class=\"line\"># 查询源码包中文件情况</span><br><span class=\"line\">tar -tf wechat.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装 rpm 包, 不安装依赖，并且强制安装</span><br><span class=\"line\">rpm -ivh --nodeps --froce xxx.rpm</span><br></pre></td></tr></table></figure>\n<h3 id=\"调试-rpm-包中会用到的-rpm-的命令\">调试 rpm 包中会用到的 RPM 的命令<a title=\"#调试-rpm-包中会用到的-rpm-的命令\" href=\"#调试-rpm-包中会用到的-rpm-的命令\"></a></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查询已经安装的包的 rpm 包的 pre 和 post hook</span><br><span class=\"line\">rpm -q --scripts xxx</span><br><span class=\"line\"># 查询 rpm 文件的 hook</span><br><span class=\"line\">rpm -qp --script xxx.rpm</span><br><span class=\"line\"># 安装到自定义的目录</span><br><span class=\"line\">yum install --installroot=/custom/dir xxxx</span><br><span class=\"line\"># 安装的时候，显示 hook 执行的详细信息</span><br><span class=\"line\">yum install --installroot=/custom/dir --rpmverbosity=debug xxxx </span><br></pre></td></tr></table></figure>\n","prev":{"title":"Linux emacs clangd 配置","link":"2019/10/08/emacs-clangd-config"},"next":{"title":"OpenGL 基本概念","link":"2019/08/31/opengl-spec"},"plink":"https://kopinions.com/2019/09/12/rpm-package-with-rpmbuild/","toc":[{"id":"rpm-安装包制作教程","title":"RPM 安装包制作教程","index":"1","children":[{"id":"安装必要的软件包","title":"安装必要的软件包","index":"1.1"},{"id":"准备要构建的源码包","title":"准备要构建的源码包","index":"1.2"},{"id":"准备-rpm-构建描述文件（spec文件）","title":"准备 rpm 构建描述文件（spec文件）","index":"1.3"},{"id":"打包","title":"打包","index":"1.4"},{"id":"常见的问题","title":"常见的问题","index":"1.5"},{"id":"打包过程中常会用到的命令","title":"打包过程中常会用到的命令","index":"1.6"},{"id":"调试-rpm-包中会用到的-rpm-的命令","title":"调试 rpm 包中会用到的 RPM 的命令","index":"1.7"}]}],"reading_time":"1334 字约 9 分钟"}