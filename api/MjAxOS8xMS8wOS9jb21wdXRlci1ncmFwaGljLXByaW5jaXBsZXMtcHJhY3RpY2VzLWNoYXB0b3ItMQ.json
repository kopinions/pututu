{"title":"计算机图形学原理及实践学习笔记","date":"2019-11-09T10:40:20.000Z","date_formatted":{"ll":"2019年11月9日","L":"2019/11/09","MM-DD":"11-09"},"link":"2019/11/09/computer-graphic-principles-practices-chaptor-1","tags":["Graphics","OpenGL"],"categories":["Graphics","OpenGL"],"updated":"2019-11-09T00:00:00.000Z","content":"<html><head></head><body><div id=\"content\">\n\n<div id=\"outline-container-org25ffd20\" class=\"outline-2\">\n<h2 id=\"org25ffd20\">计算机图形学原理及实践</h2>\n<div class=\"outline-text-2\" id=\"text-org25ffd20\">\n</div>\n<div id=\"outline-container-orgdc29fbf\" class=\"outline-3\">\n<h3 id=\"orgdc29fbf\">基本概念</h3>\n<div class=\"outline-text-3\" id=\"text-orgdc29fbf\">\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">概念</th>\n<th scope=\"col\" class=\"org-left\">中文</th>\n<th scope=\"col\" class=\"org-left\">含义</th>\n<th scope=\"col\" class=\"org-left\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"org-left\">model</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">modeling</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">visual perception</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">visual commutation</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">rendering</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">将一些列的物体显示出来的过程</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">dynamic range <a id=\"orge2e2f7d\"></a></td>\n<td class=\"org-left\">动态范围</td>\n<td class=\"org-left\">可变信号（光，声音）最大值和最小值的比值</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">resolution</td>\n<td class=\"org-left\">分辨率</td>\n<td class=\"org-left\">两个物体刚好能分辨开的距离</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">sampling</td>\n<td class=\"org-left\">采样</td>\n<td class=\"org-left\">摄像机和人眼的观察原理类似，曝光一段时间</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">积累光子能量，从而得到相关点上的各种属性</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">因为性能和成本考虑采样不可能在每个顶点上发</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">采集光子能量，所以需要只在部分顶点上采集相关信息，称之为采样</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n<div id=\"outline-container-orgd3e4b30\" class=\"outline-3\">\n<h3 id=\"orgd3e4b30\">原则</h3>\n<div class=\"outline-text-3\" id=\"text-orgd3e4b30\">\n<ol class=\"org-ol\">\n<li>知道自己在解决什么样的问题<br></li>\n<li>对解决方案进行近似处理，而不是对问题进行近似处理。确定自己工作在什么问题上，并且能清晰的描述问题。而不是对问题有个大概的认识。<br>\n这样很多时候有可能你永远也找不到解决方案因为你不正确的问题上。或者直接对问题进行近似，这样有可能得出的解决方案也是错的。<br></li>\n<li>对于任何工程项目来讲，都有自己的预算（时间，成本，大小）等等。需要我们做好取舍<br></li>\n<li>使用自己最方便的坐标系，然后通过转换到不同的坐标系上<br></li>\n</ol>\n</div>\n</div>\n\n<div id=\"outline-container-org1e12020\" class=\"outline-3\">\n<h3 id=\"org1e12020\">一些数值</h3>\n<div class=\"outline-text-3\" id=\"text-org1e12020\">\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n<caption class=\"t-above\"><span class=\"table-number\">Table 1:</span> 一些数值</caption>\n\n<colgroup>\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">数值</th>\n<th scope=\"col\" class=\"org-left\">表达式</th>\n<th scope=\"col\" class=\"org-left\">量级</th>\n<th scope=\"col\" class=\"org-left\">单位</th>\n<th scope=\"col\" class=\"org-left\">范围</th>\n<th scope=\"col\" class=\"org-left\">说明</th>\n<th scope=\"col\" class=\"org-left\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"org-left\">可见光波长</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">10^{-9}</td>\n<td class=\"org-left\">m</td>\n<td class=\"org-left\">400-700nm</td>\n<td class=\"org-left\">可见光的范围</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">发丝的直径</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">10^{-4}</td>\n<td class=\"org-left\">m</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">是可见光的波长的100-200倍</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">光子的能量</td>\n<td class=\"org-left\">E=hc/λ</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">h ≈ 6.6 × 10^{-34} Js 是普朗克常数,单位是焦耳秒</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">$$ E\\approx\\frac{1.98 \\times 10 ^{-25} Jm}{\\lambda} $$</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">c ≈ 3 × 10^{8} 光速</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">E 是光子所拥有的能量</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">灯泡的瓦数</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">10^{1-2}</td>\n<td class=\"org-left\">W 或者 J/s</td>\n<td class=\"org-left\">10-100W</td>\n<td class=\"org-left\">W 是 J / S, J 是 焦耳</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">灯泡的能量可以转换成光子数</td>\n<td class=\"org-left\">$$ photons = \\frac{2 J/s}{E} $$</td>\n<td class=\"org-left\">10^{18}</td>\n<td class=\"org-left\">个/s</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">E 可以根据灯泡发光的波长算出来，一个光子的能量，</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">通过这个方程可以将能量转换为光子数量</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">单位平面的光子数</td>\n<td class=\"org-left\">$$ p = \\frac{photons}{flux} $$</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">个/m^{2}/s</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">常见显示器像素数</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">10^{6}</td>\n<td class=\"org-left\">个</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">常见显示器<a href=\"#orge2e2f7d\">动态范围</a></td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">10^{2}</td>\n<td class=\"org-left\">500:1</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">最亮的点发送光子的数量和最暗的点发送光子数量的比值</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">人眼的角分辨率</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">弧度</td>\n<td class=\"org-left\">1角分－3角分</td>\n<td class=\"org-left\">人眼分辨率一般用角分辨率来定义.可以转换为1 km 能分辨两个点而不是一个点</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">要求这两个点最小离开的距离 0.3m / 1km</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td class=\"org-left\">数字相机单位传感器光子数</td>\n<td class=\"org-left\">$$ \\frac{sensor count}{photon generate by light source in unit of time} $$</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">个</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">单位时间到传感器的光子是有限的，所以我们需要调整快门速度，来调整曝光</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n<div id=\"outline-container-org6c46735\" class=\"outline-3\">\n<h3 id=\"org6c46735\">人眼的一些特性</h3>\n<div class=\"outline-text-3\" id=\"text-org6c46735\">\n<ol class=\"org-ol\">\n<li>中央区域分辨率高，人视线焦点处<br></li>\n<li>边缘处分辨率较低<br></li>\n<li>对移动非常敏感（比如屏幕闪烁）<br></li>\n<li>对水平或者垂直的变化比较敏感，对对角线上的变换不敏感<br></li>\n<li>对明暗的感知不是线性的<br></li>\n<li>对轮廓比较敏感<br></li>\n</ol>\n</div>\n</div>\n</div>\n\n\n<div id=\"outline-container-orgc1c87a3\" class=\"outline-2\">\n<h2 id=\"orgc1c87a3\">2D Graphics</h2>\n<div class=\"outline-text-2\" id=\"text-orgc1c87a3\">\n<p>\n对于 2D 的图形应用来讲，我们将业务模型（Application Model）通过一定的手段进行建模，以图形化的形式显示出来，同事可以与用户进行交互，从而完成实际的业务功能。比如设计领域，建模领域之类的一些软件。<br>\n</p>\n</div>\n\n<div id=\"outline-container-orgc8cde51\" class=\"outline-3\">\n<h3 id=\"orgc8cde51\">图形系统演进史</h3>\n<div class=\"outline-text-3\" id=\"text-orgc8cde51\">\n<p>\n图形系统的演进和很多很多编程语言，编程平台（操作系统）的演进是类似的。每一个新的迭代都会提供更高的抽象，以及将以前很多必须由应用程序完成的工作，放在图形系统中完成。我们接下来会看下整个图形系统的演进过程<br>\n</p>\n</div>\n\n<div id=\"outline-container-org67dadfd\" class=\"outline-4\">\n<h4 id=\"org67dadfd\">整型坐标系统到浮点坐标系统</h4>\n<div class=\"outline-text-4\" id=\"text-org67dadfd\">\n<p>\n在80年代以及90年代早期，一些图形系统可以支持在矩形画布（Canvas）上进行绘制。在画布上绘制的时候，并不是直接绘制单独的像素，而是绘制图元（primitives）。这里的图元指的是：几何形状（多边形，圆形），或者提前加载好的<br>\n矩形形状的图片。图元定义了轮廓信息。通过一些属性来控制图元实际的展示效果，比如 brush 控制图元内部应该如何显示，比如 solid-gray 填充。比如 pen 控制图元的轮廓如何显示， 比如 red-pen.<br>\n</p>\n\n<p>\n当时应用程序的典型处理场景是：在 Canvas 以整型坐标系进行绘制，并将绘制结果按照一一对应的方式映射到屏幕上。Canvas 上最左上角为整型坐标系的原点，向右为X 轴正向，向下为 Y 轴的正方向。<br>\n</p>\n</div>\n\n<ul class=\"org-ul\">\n<li><a id=\"org1cec56e\"></a>不同屏幕显示的不一样大小<br>\n<div class=\"outline-text-5\" id=\"text-org1cec56e\">\n<p>\n在我们讲解这个问题之前先来看下屏幕的相关知识。<br>\n</p>\n\n<p>\n在屏幕技术指标中有一个指标叫屏幕分辨率。这个指标主要用来衡量显示器对细节的分辨能力。分辨率越高意味着展示的信息更多，细节更多。对于数字设备来讲分辨率的单位是 PPI(Pixel Per Inch), 每 Inch 可以显示的像素数量。<br>\n</p>\n\n<p>\n因为整型坐标系的原因，canvas 和 屏幕是1对1 映射。如果屏幕分辨率高（单位尺寸拥有的像素点多 ppi 比较大）那么最终显示尺寸就会很小。如果屏幕的分辨率低（单位尺寸拥有的像素点少），那么最终显示的图元就会非常大。<br>\n</p>\n\n<p>\n比如我们设计的尺寸为 100 * 100 个点的正方形。在 300 ppi 的显示器上最终的成像尺寸是 100 / 300 = 0.33 inch (英尺). 在 72 ppi 的屏幕上追中成像尺寸是： 100 / 72 = 1.38 inch<br>\n</p>\n\n<p>\n最终成像的大小相差非常巨大。为了解决这种屏幕分辨率依赖的问题，引入了在矢量图形中非常成熟的技术：通过浮点数来映射坐标系统，来隔离设备相关的特性。<br>\n</p>\n</div>\n\n<ul class=\"org-ul\">\n<li><a id=\"orgf955b97\"></a>抽象坐标系<br>\n<div class=\"outline-text-6\" id=\"text-orgf955b97\">\n<p>\n假设我们在纸上对一个钟表建模，我们首先在纸上画一个二维座标系，将钟表的中心放置在座标系的中间，然后分别在座标系原点绘制三个指针。我们用纸上的这个坐标系来对钟表建模，但是建模出来的坐标，不一定就是<br>\n实际我们看到的坐标，比如我们需要把纸挪动一下以便与观察。我们将纸上的这个坐标系称之为抽象坐标系，它不表示世界的物理世界的位置，或者尺寸。在我们最终要展示到现实世界的时候，我们需要对抽象坐标系进行<br>\n一次映射，将其映射为现实世界中的物理坐标系。<br>\n</p>\n\n<p>\n当使用抽象坐标系去描述场景的时候，我们需要去考虑如下几个因素：<br>\n</p>\n<ol class=\"org-ol\">\n<li>显示设备的特性：尺寸，分辨率，纵横比<br></li>\n<li>在上面设备特性的约束下，我们希望我们最终成像的尺寸和位置<br></li>\n<li>如何定义集合结构，以便满足预期的结果<br></li>\n</ol>\n</div>\n</li>\n\n<li><a id=\"org5772bfc\"></a>物理坐标系<br>\n<div class=\"outline-text-6\" id=\"text-org5772bfc\">\n<p>\n在 1980 年的时候，Mac 和 Windows 一起定义了一个独立与硬件的尺寸单位 DIU (Device Indenpent Unit), 这个 DIU 尺寸是 $$ \\frac{1}{72} $$ inch.<br>\n假设我们定义我们表盘的直径是 1 inch.<br>\n当我们决定将抽象坐标系的钟表图像现实到物理坐标系的时候，如果只是一一映射，这种时候会出现如下几个问题：<br>\n</p>\n<ol class=\"org-ol\">\n<li>设备的坐标系都是最左上点的坐标为 0,0, 所以这种情况下， 钟表指能显示出来最右下角的 1/4.<br></li>\n<li>抽象坐标系定义的是相对的 size，比如可能只有 -1到1来 表示 1 inch，当转换到 96 PPI 的显示器上的时候，只有 0.02 inch(2/96 ≈ 0.02), 会非常小。<br></li>\n</ol>\n\n<p>\n所以在展示到物理坐标系的时候，我们需要进行转换。<br>\n</p>\n\n<ol class=\"org-ol\">\n<li>缩放，将 2 ppi 的表盘的坐标映射到， 96 ppi 的坐标，意味着我们需要对于表盘上的每个坐标 $$ x = x \\times \\frac{96}{2} $$<br></li>\n<li>平移<br></li>\n</ol>\n\n<p>\n对于变换是有顺序的。对于上面的粒子比如如果先将表盘原点移动到 1, 1，然后在进行缩放，这样会导致部分的表盘还是无法展示。<br>\n</p>\n</div>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n\n<div id=\"outline-container-org76c0c7f\" class=\"outline-4\">\n<h4 id=\"org76c0c7f\">即时模式（Immedicate Mode） vs 保留模式 (Retained Mode)</h4>\n<div class=\"outline-text-4\" id=\"text-org76c0c7f\">\n<p>\n随着图形系统的演进，出现了两种截然不同的需求，进而催生出两个不同的图形系统的处理方向和模式：<br>\n</p>\n<ol class=\"org-ol\">\n<li>对性能非常敏感，或者在受限的硬件下的这部分场景，仅仅需要图形系统提供一套高效的硬件操作接口，其他的图形相关的事情由应用开发着去自行的实现。我们称这种模式为即时模式<br></li>\n<li>对开发效率非常敏感，希望图形系统尽量把公共的事情处理完，应用开发者只需要关心实际的场景的操作编写就可以。我们称这种模式为保留模式。<br></li>\n</ol>\n\n<p>\n在即时模式下，图形系统仅仅是应用程序和硬件之间非常薄的一层接口。这层接口不同保存任何应用程序定义的图元信息，而是在应用程序调用的时候（比如画矩形），图形系统直接执行相关的操作－－ 将矩形的坐标<br>\n映射到设备坐标系并且将对应的像素写入到显示缓冲区，然后将控制权直接返回给应用程序。这种时候如果需要对渲染好的图像进行处理，需要应用程序去遍历所有的业务模型，来重新生成图元，来重新进行渲染过程。<br>\n同时应用程序开发者还需要需要处理一些常见的处理逻辑，比如鼠标处理，目标拾取（用户点击的时候，是对哪一个物体进行操作），等等。<br>\n在即时模式下，应用程序开发者对整个软件有更大的可控性，同时意味着对应用程序开发者有更高的要求。<br>\n</p>\n\n\n<p>\n在保留模式下，将所有场景中出现的图元保存进一个特殊的数据库，场景图数据库（scene graph）。应用程序开发者通过调用图形系统提供的 API, 来创建 scene graph, 并且可以通过增量修改的方式来修改 scene graph.<br>\n任何变更都会导致场景图同步器触发相应的处理，应用相应的变更，并且渲染到屏幕上。因为所有的图元和状态都被保存在图形系统中，所以图形系统可以做很多通用的任务，比如目标拾取，鼠标处理。<br>\n</p>\n\n<p>\n在 60 年代有一个非常有远见的软件 Sketchpad. 这个软件开启了交互软件这一个新的领域。在这个软件中由如下几个概念：<br>\n</p>\n\n<ol class=\"org-ol\">\n<li>master template: 一组图元以及下一级 template 的 instance 的集合<br></li>\n<li>instance: 一个 template 通过实例化创建的 instance. instance 可以被用来组成渲染的场景。每一个 instance 可以被进行各种几何操作：平移，旋转，缩放。有一个需要注意的是，instance 保留的是 master 的值，<br></li>\n</ol>\n<p>\n所以如果 master 发生变更，所有的改动会立即反映到所有的 instance 上。<br>\n</p>\n\n<p>\nSketchpad 的这个概念在很多现在的图形系统中依然存在。很多时候可能会以不同的命名存在，比如 UI Controls, Widgets.<br>\n</p>\n\n<p>\n现在 2D 图形系统基本上都是保留模式，但是 3D 系统相对就没有这么普遍，因为 3D 模式下比较复杂，保留模式的成本相对比较高。<br>\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-org6ba5ee2\" class=\"outline-4\">\n<h4 id=\"org6ba5ee2\">过程式（Procedural） vs 声明式（Declarative）</h4>\n<div class=\"outline-text-4\" id=\"text-org6ba5ee2\">\n</div>\n<ul class=\"org-ul\">\n<li><a id=\"org41f8f4d\"></a>过程式：通过编写代码，顺序的调用图形系统的API 来和设备交互最终通过这种形式来完成实际的业务功能。－－－描述如何去做（把大象装进冰箱1. 打开冰箱门，2:把大象装进去， 3: 关闭冰箱门）<br></li>\n\n<li><a id=\"orge66216e\"></a>声明式：通过描述想做的事情，具体这件事情如何去做，有专门的工具去做相应的处理。－－－ 描述做什么（把大象装进冰箱，具体怎么装，由其他工具处理）<br></li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-org05ee78a\" class=\"outline-3\">\n<h3 id=\"org05ee78a\">现实图形管线隐喻</h3>\n<div class=\"outline-text-3\" id=\"text-org05ee78a\">\n\n<div id=\"org42a60c6\" class=\"figure\">\n<p><img src=\"/2019/11/09/computer-graphic-principles-practices-chaptor-1/ancient_renderer.jpg\"><br>\n</p>\n</div>\n</div>\n<div id=\"outline-container-org9fb645f\" class=\"outline-4\">\n<h4 id=\"org9fb645f\">几个名词</h4>\n<div class=\"outline-text-4\" id=\"text-org9fb645f\">\n<ol class=\"org-ol\">\n<li>String 长线（光线）<br></li>\n<li>Screw eye小图钉（观察者/照相机/观察点）<br></li>\n<li>Pointer 指向器/取样器（用来指向物体中的某一部分）<br></li>\n<li>Shutter 百叶窗(视窗)<br></li>\n<li>Pencil-mark 铅笔（画图）<br></li>\n</ol>\n</div>\n</div>\n\n<div id=\"outline-container-orge790cb2\" class=\"outline-4\">\n<h4 id=\"orge790cb2\">渲染过程</h4>\n<div class=\"outline-text-4\" id=\"text-orge790cb2\">\n<p>\n传统画图算法的伪代码<br>\n</p>\n<div class=\"org-src-container\">\n<figure class=\"highlight text\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">Input: a scene containing some objects, location of eye-point </span><br><span class=\"line\">Output: a drawing of the objects</span><br><span class=\"line\"></span><br><span class=\"line\">initialize drawing to be blank foreach object o</span><br><span class=\"line\">for visible point P of o </span><br><span class=\"line\">    Open shutter</span><br><span class=\"line\">    Place pointer at P</span><br><span class=\"line\">    if string from P to eye-point touches boundary of frame </span><br><span class=\"line\">\tDo nothing</span><br><span class=\"line\">    else</span><br><span class=\"line\">\tHold a pencil at point where string passes through frame Hold string aside</span><br><span class=\"line\">\tClose shutter to make pencil-mark on paper</span><br><span class=\"line\">\tRelease string</span><br><span class=\"line\">    fi</span><br><span class=\"line\">end</span><br></pre></td></tr></tbody></table></figure>\n</div>\n\n<p>\n在这个算法中由三点需要注意<br>\n</p>\n<ol class=\"org-ol\">\n<li>只需要画可以看见的点<br></li>\n<li>取样点是由有限的<br></li>\n<li>当取样点和观察点的线和百叶窗边框相交的时候忽略当前取样点<br></li>\n</ol>\n\n<p>\n如果把这个古老的渲染引擎使用数学办法进行建模的话，我们可以得到如下的数学模型<br>\n</p>\n\n\n<div id=\"org93b5170\" class=\"figure\">\n<p><img src=\"/2019/11/09/computer-graphic-principles-practices-chaptor-1/antient_renderer_derivation.jpg\"><br>\n</p>\n</div>\n\n<p>\n三个坐标轴是右手坐标系的坐标轴。 z 轴指向物体（百叶窗），y 轴指向上方，x 轴指向左侧（在观察点位置）这里百叶窗处在 z = 1 的平面，意味着 对于百业窗相交点，任何一个点 (x, y, z) 的位置可以表示为 (x', y', 1).<br>\n红色三角形中，（0, y, z) 的点， 与百叶窗的交点是 (0, y', 1), 通过将 (0, y', 1) 投影到 z=0 平面，我们会获得 (0, y', 0)<br>\n将 (0, y, z). 投影到 z=0 平面，我们会获得 (0, y, 0) 的点，因为两个三角形的内角一样，所以 $$ \\frac{y'}{1(z = 1)} = \\frac{y}{z} $$ <br>\n对于 x 轴上的所有点，使用类似的计算方法，我们就可以得到，百叶窗上相交的所有点的坐标<br>\n</p>\n\n<p>\n$$ x' = \\frac{x}{z} $$ <br>\n$$ y' = \\frac{y}{z} $$ <br>\n</p>\n\n\n<p>\n所以此时我们的伪代码就可以变成如下的数学描述方式<br>\n</p>\n\n<div class=\"org-src-container\">\n<figure class=\"highlight text\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">Input: a scene containing some objects</span><br><span class=\"line\">Output: a drawing of the objects</span><br><span class=\"line\">initialize drawing to be blank foreach object o</span><br><span class=\"line\"></span><br><span class=\"line\">foreach visible point P = (x, y, z) of o</span><br><span class=\"line\"></span><br><span class=\"line\">if xmin ≤ (x/z) ≤ xmax and ymin ≤ (y/z) ≤ ymax</span><br><span class=\"line\">    make a point on the drawing at location (x/z, y/z)</span><br></pre></td></tr></tbody></table></figure>\n</div>\n\n<p>\n有一个小细节，在这个坐标系中，当 x 轴增加的时候，我们在观察点处看到的是向左边增加的，就意味者我们需要从右往左边画，跟常见的/通用的建模手段不匹配，所以我们在这里做一个小小的变换 (x/z -&gt; -x/z)<br>\n</p>\n<div class=\"org-src-container\">\n<figure class=\"highlight text\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">if xmin ≤ (x/z) ≤ xmax and ymin ≤ (y/z) ≤ ymax</span><br><span class=\"line\">    make a point on the drawing at location (-x/z, y/z)</span><br></pre></td></tr></tbody></table></figure>\n</div>\n\n<p>\n假设我们现在需要用刚才的数学模型来绘制一个立方体的线框图，最直观的立方体的描述就是 8 个三维中的点<br>\n</p>\n\n<div class=\"org-src-container\">\n<figure class=\"highlight text\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">(−0.5, −0.5, -0.5)</span><br><span class=\"line\">(-0.5, 0.5, −0.5)</span><br><span class=\"line\">(0.5, 0.5, -0.5)</span><br><span class=\"line\">(0.5, -0.5, -0.5)</span><br><span class=\"line\">(-0.5, -0.5, 0.5)</span><br><span class=\"line\">(-0.5, 0.5, 0.5)</span><br><span class=\"line\">(0.5, 0.5, 0.5)</span><br><span class=\"line\">(0.5, -0.5, 0.5)</span><br></pre></td></tr></tbody></table></figure>\n</div>\n\n<p>\n这也就是我们所谓的模型坐标系，但是这种情况下，我们的立方体是看不见的，这个立方体在百叶窗的后面 (z &lt; 1)<br>\n</p>\n\n<p>\n所以我们需要对这个模型进行对应的平移，将模型移动到百叶窗的的前面 (z &gt; 1). 这一步即现在渲染系统中的模型转换矩阵所做的事情<br>\n</p>\n\n<div class=\"org-src-container\">\n<figure class=\"highlight text\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">(−0.5, −0.5, 2.5)</span><br><span class=\"line\">(-0.5, 0.5, 2.5)</span><br><span class=\"line\">(0.5, 0.5, 2.5)</span><br><span class=\"line\">(0.5, -0.5, 2.5)</span><br><span class=\"line\">(-0.5, -0.5, 3.5)</span><br><span class=\"line\">(-0.5, 0.5, 3.5)</span><br><span class=\"line\">(0.5, 0.5, 3.5)</span><br><span class=\"line\">(0.5, -0.5, 3.5)</span><br></pre></td></tr></tbody></table></figure>\n</div>\n</div>\n</div>\n</div>\n\n\n<div id=\"outline-container-org25ed360\" class=\"outline-3\">\n<h3 id=\"org25ed360\">人眼系统</h3>\n<div class=\"outline-text-3\" id=\"text-org25ed360\">\n</div>\n<div id=\"outline-container-orgc941cee\" class=\"outline-4\">\n<h4 id=\"orgc941cee\">特性</h4>\n<div class=\"outline-text-4\" id=\"text-orgc941cee\">\n<ol class=\"org-ol\">\n<li>对物体的感知与光照环境无关。<br></li>\n<li>对形状轮廓（检测边， 不同亮度区域的边界）非常敏感<br></li>\n<li>可以不同形状轮廓进行拼接以便与进一步识别处理（色盲测试卡）<br></li>\n<li>人眼在检测深度的时候会由两种机制：聚焦机制（人眼焦点判断物体远近），视差机制（两个眼睛有一定的距离，成像必然会在水平方向有一定的差异，这种差异可以被用来识别物体的远景。当物体超过1300m 的时候，视差为0, 所以我们<br>\n没有办法判断特别远的物体的深度）。<br></li>\n<li>不变性，不会随着光线，颜色，形状，大小的变化而对最终识别的结果产生影响（白天 vs 晚上因为光线的原因，人眼看到的颜色是不一样的； 不同方向看到的形状是不一样的； 不同距离看到的大小不一样，这些情况下人眼<br>\n都能够很好的识别同一个物体）。 不变性带来的一个非常重要的图形学的影响就是：对于一些值来讲，相对指比绝对值更加重要。<br></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n</body></html>","prev":{"title":"OpenGL 顶点后处理阶段","link":"2019/11/20/vertex-post-processing"},"next":{"title":"从信号处理的角度理解 OpenGL 多重采样","link":"2019/10/31/multisample-related"},"plink":"https://kopinions.com/2019/11/09/computer-graphic-principles-practices-chaptor-1/","toc":[{"id":"org25ffd20","title":"计算机图形学原理及实践","index":"1","children":[{"id":"orgdc29fbf","title":"基本概念","index":"1.1"},{"id":"orgd3e4b30","title":"原则","index":"1.2"},{"id":"org1e12020","title":"一些数值","index":"1.3"},{"id":"org6c46735","title":"人眼的一些特性","index":"1.4"}]},{"id":"orgc1c87a3","title":"2D Graphics","index":"2","children":[{"id":"orgc8cde51","title":"图形系统演进史","index":"2.1"},{"id":"org05ee78a","title":"现实图形管线隐喻","index":"2.2"},{"id":"org25ed360","title":"人眼系统","index":"2.3"}]}],"reading_time":"4504 字约 30 分钟"}