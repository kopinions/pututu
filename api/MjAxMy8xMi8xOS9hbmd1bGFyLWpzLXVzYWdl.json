{"title":"AngularJS 小记","date":"2013-12-19T12:15:01.000Z","date_formatted":{"ll":"2013年12月19日","L":"2013/12/19","MM-DD":"12-19"},"link":"2013/12/19/angular-js-usage","tags":["frontend"],"categories":["frontend"],"updated":"2022-09-29T15:48:22.605Z","content":"<p>AngularJS 是一款来自 Google 的前端 JavaScript 框架，也是 SPA（single-page-application，单页应用）框架。AngularJS 框架的体积非常小，但是设计理念和功能却非常强大，极大地简化前端开发的负担，它快速成为了 JavaScript 的主流框架，帮助开发者从事 web 开发。</p>\n<h3 id=\"service-&amp;-provider-&amp;-factory-&amp;-value的区别\">Service &amp; Provider &amp; Factory &amp; Value的区别<a title=\"#service-&amp;-provider-&amp;-factory-&amp;-value的区别\" href=\"#service-&amp;-provider-&amp;-factory-&amp;-value的区别\"></a></h3>\n<h5 id=\"1.-difference-&amp;-usages\">1. Difference &amp; Usages<a title=\"#1.-difference-&amp;-usages\" href=\"#1.-difference-&amp;-usages\"></a></h5>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>Item</th>\n<th>Syntax</th>\n<th>When Using, Inject Result</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Service</td>\n<td><code>module.service(&quot;service&quot;, function service()&#123;&#125;)</code></td>\n<td>instance of the function <strong>service</strong></td>\n<td><strong>service</strong> is function passed to module.service</td>\n</tr>\n<tr>\n<td>Value</td>\n<td><code>module.value(&quot;value&quot;, function value()&#123;&#125;)</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Factory</td>\n<td><code>module.factory(&quot;factory&quot;, function factory()&#123;&#125;)</code></td>\n<td>value of <strong>value()</strong> called by reference</td>\n<td><strong>value</strong> are the function passed to module.factory</td>\n</tr>\n<tr>\n<td>Provider</td>\n<td><code>module.provider(&quot;newprovider&quot;, function()&#123;&#125;)</code></td>\n<td>new newprovider().$get()</td>\n<td><strong>newprovider</strong> is function passed to the module.provider</td>\n</tr>\n</tbody>\n</table></div></div><h5 id=\"2.-example\">2. Example<a title=\"#2.-example\" href=\"#2.-example\"></a></h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app = angular.module( &#x27;app&#x27;, [] );</span><br><span class=\"line\"></span><br><span class=\"line\">var MyFunc = function() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tthis.name = &quot;default name&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tthis.$get = function() &#123;</span><br><span class=\"line\">\t\tthis.name = &quot;new name&quot;</span><br><span class=\"line\">\t\treturn &quot;Hello from MyFunc.$get(). this.name = &quot; + this.name;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn &quot;Hello from MyFunc(). this.name = &quot; + this.name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// returns the actual function</span><br><span class=\"line\">app.service( &#x27;myService&#x27;, MyFunc ); </span><br><span class=\"line\"></span><br><span class=\"line\">// returns the function&#x27;s return value</span><br><span class=\"line\">app.factory( &#x27;myFactory&#x27;, MyFunc );</span><br><span class=\"line\"></span><br><span class=\"line\">// returns the output of the function&#x27;s $get function</span><br><span class=\"line\">app.provider( &#x27;myProv&#x27;, MyFunc );</span><br><span class=\"line\"></span><br><span class=\"line\">function MyCtrl( $scope, myService, myFactory, myProv ) &#123;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t\tmyService === &#123;</span><br><span class=\"line\">\t\t\tname: &quot;defult name&quot;</span><br><span class=\"line\">\t\t\t$get = function() &#123;</span><br><span class=\"line\">\t\t\t\tname: &quot;new name&quot;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\t$scope.serviceOutput = &quot;myService = &quot; + myService;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t\tmyFactory === MyFunc() === &quot;Hello from MyFunc(). this.name = defaultname&quot;;</span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\t$scope.factoryOutput = &quot;myFactory = &quot; + myFactory;</span><br><span class=\"line\">\t/*</span><br><span class=\"line\">\t\tmyProv === new MyFunc().$get(); === &quot;Hello from MyFunc.$get(). this.name = new name&quot;</span><br><span class=\"line\">\t*/</span><br><span class=\"line\">\t$scope.providerOutput = &quot;myProvider = &quot; + myProv;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"another-provider-example\">another provider example<a title=\"#another-provider-example\" href=\"#another-provider-example\"></a></h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Define the eventTracker provider</span><br><span class=\"line\">function EventTrackerProvider() &#123;</span><br><span class=\"line\">  var trackingUrl = &#x27;/track&#x27;;</span><br><span class=\"line\"> </span><br><span class=\"line\">  // A provider method for configuring where the tracked events should been saved</span><br><span class=\"line\">  this.setTrackingUrl = function(url) &#123;</span><br><span class=\"line\">    trackingUrl = url;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">  // The service factory function</span><br><span class=\"line\">  this.$get = [&#x27;$http&#x27;, function($http) &#123;</span><br><span class=\"line\">    var trackedEvents = &#123;&#125;;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      // Call this to track an event</span><br><span class=\"line\">      event: function(event) &#123;</span><br><span class=\"line\">        var count = trackedEvents[event] || 0;</span><br><span class=\"line\">        count += 1;</span><br><span class=\"line\">        trackedEvents[event] = count;</span><br><span class=\"line\">        return count;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      // Call this to save the tracked events to the trackingUrl</span><br><span class=\"line\">      save: function() &#123;</span><br><span class=\"line\">        $http.post(trackingUrl, trackedEvents);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">describe(&#x27;eventTracker&#x27;, function() &#123;</span><br><span class=\"line\">  var postSpy;</span><br><span class=\"line\"> </span><br><span class=\"line\">  beforeEach(module(function($provide) &#123;</span><br><span class=\"line\">    // Register the eventTracker provider</span><br><span class=\"line\">    $provide.provider(&#x27;eventTracker&#x27;, EventTrackerProvider);</span><br><span class=\"line\">  &#125;));</span><br><span class=\"line\"> </span><br><span class=\"line\">  beforeEach(module(function(eventTrackerProvider) &#123;</span><br><span class=\"line\">    // Configure eventTracker provider</span><br><span class=\"line\">    eventTrackerProvider.setTrackingUrl(&#x27;/custom-track&#x27;);</span><br><span class=\"line\">  &#125;));</span><br><span class=\"line\"> </span><br><span class=\"line\">  it(&#x27;tracks events&#x27;, inject(function(eventTracker) &#123;</span><br><span class=\"line\">    expect(eventTracker.event(&#x27;login&#x27;)).toEqual(1);</span><br><span class=\"line\">    expect(eventTracker.event(&#x27;login&#x27;)).toEqual(2);</span><br><span class=\"line\">  &#125;));</span><br><span class=\"line\"> </span><br><span class=\"line\">  it(&#x27;saves to the tracking url&#x27;, inject(function(eventTracker, $http) &#123;</span><br><span class=\"line\">    postSpy = spyOn($http, &#x27;post&#x27;);</span><br><span class=\"line\">    eventTracker.event(&#x27;login&#x27;);</span><br><span class=\"line\">    eventTracker.save();</span><br><span class=\"line\">    expect(postSpy).toHaveBeenCalled();</span><br><span class=\"line\">    expect(postSpy.mostRecentCall.args[0]).not.toEqual(&#x27;/track&#x27;);</span><br><span class=\"line\">    expect(postSpy.mostRecentCall.args[0]).toEqual(&#x27;/custom-track&#x27;);</span><br><span class=\"line\">    expect(postSpy.mostRecentCall.args[1]).toEqual(&#123; &#x27;login&#x27;: 1 &#125;);</span><br><span class=\"line\">  &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"angularjs-dependence-injection\">AngularJS dependence injection<a title=\"#angularjs-dependence-injection\" href=\"#angularjs-dependence-injection\"></a></h3>\n<h6 id=\"there-are-two-kinds-of-dependence-in-angular:-module-dependence,-service-dependence.\">There are two kinds of dependence in Angular: Module Dependence, Service Dependence.<a title=\"#there-are-two-kinds-of-dependence-in-angular:-module-dependence,-service-dependence.\" href=\"#there-are-two-kinds-of-dependence-in-angular:-module-dependence,-service-dependence.\"></a></h6>\n<pre><code>1. The Module dependence are defined by angular.module(&quot;moduleName&quot;,[&quot;ModuleToDependOn&quot;]).      \n    I write my module use the angular.module, when the js file is loaded, then the angular knows there is a new module. When this module is required, angular will loaded the module automatically. \n</code></pre>\n<hr>\n<pre><code>2. The Service dependence are defined by the function(service,provider,factory) provided by angular.module.\n</code></pre>\n","prev":{"title":"打造人脉不如打造自己","link":"2014/02/08/connection-vs-capability"},"plink":"https://kopinions.com/2013/12/19/angular-js-usage/","toc":[{"id":"service-&-provider-&-factory-&-value的区别","title":"Service &amp; Provider &amp; Factory &amp; Value的区别","index":"1"},{"id":"angularjs-dependence-injection","title":"AngularJS dependence injection","index":"2"}],"reading_time":"622 字约 4 分钟"}