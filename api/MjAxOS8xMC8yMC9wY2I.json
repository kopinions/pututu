{"title":"IOT related 知识","date":"2019-10-20T12:40:20.000Z","date_formatted":{"ll":"2019年10月20日","L":"2019/10/20","MM-DD":"10-20"},"link":"2019/10/20/pcb","tags":["iot"],"categories":["iot"],"updated":"2019-10-20T00:00:00.000Z","content":"<html><head></head><body><div id=\"content\">\n\n<div id=\"outline-container-org9c929b0\" class=\"outline-2\">\n<h2 id=\"org9c929b0\">pcb 制造</h2>\n<div class=\"outline-text-2\" id=\"text-org9c929b0\">\n</div>\n<div id=\"outline-container-org5dcec91\" class=\"outline-3\">\n<h3 id=\"org5dcec91\">缩写</h3>\n<div class=\"outline-text-3\" id=\"text-org5dcec91\">\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n\n<col class=\"org-left\">\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"org-left\">缩写</th>\n<th scope=\"col\" class=\"org-left\">全称</th>\n<th scope=\"col\" class=\"org-left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"org-left\">THT</td>\n<td class=\"org-left\">Through Hole Technology</td>\n<td class=\"org-left\">通孔插装技术</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">SMD</td>\n<td class=\"org-left\">Surface Mount Device</td>\n<td class=\"org-left\">表面贴装器件</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">SOT</td>\n<td class=\"org-left\">Small Outline Transistor</td>\n<td class=\"org-left\">小外形晶体管</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">DIP</td>\n<td class=\"org-left\">Double In-line Package</td>\n<td class=\"org-left\">双列直插式封装</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">SOD</td>\n<td class=\"org-left\">Small Outline Diode</td>\n<td class=\"org-left\">小外形二极管</td>\n</tr>\n\n<tr>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n<td class=\"org-left\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n<div id=\"outline-container-org235f7ec\" class=\"outline-3\">\n<h3 id=\"org235f7ec\">pcb 制造行业术语</h3>\n<div class=\"outline-text-3\" id=\"text-org235f7ec\">\n</div>\n<div id=\"outline-container-orgc5b607c\" class=\"outline-4\">\n<h4 id=\"orgc5b607c\">金手指(Connecting Finger, Edge Connection)</h4>\n<div class=\"outline-text-4\" id=\"text-orgc5b607c\">\n<p>\n金手指是指硬件，所有的信号都是通过金手指传递的。电脑中比较常见的金手指如：内存条的金黄色导电片、显卡与显卡卡槽    ，金手指由多个金黄色导电片组成，因为形状比较像手，所以可以称之为金手指。<br>\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgcc3dd8f\" class=\"outline-4\">\n<h4 id=\"orgcc3dd8f\">软金 &amp; 硬金</h4>\n<div class=\"outline-text-4\" id=\"text-orgcc3dd8f\">\n<p>\n纯金的硬度比较软，所以称之为软金。金和一些化合物（铝，镍，钴）可以形成合金，这种合金物理性质上比较硬，所以称之为硬金。<br>\n硬金一般用在需要用在受力或者摩擦的地方，比如电路边缘接触点（金手指）。软金一般用在COB(Chip on board) 上打铝线用，或者手机按键的接触面。<br>\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgbda3d79\" class=\"outline-4\">\n<h4 id=\"orgbda3d79\">软金和硬金的电镀流程</h4>\n<div class=\"outline-text-4\" id=\"text-orgbda3d79\">\n<ul class=\"org-ul\">\n<li>软金：酸洗 -&gt; 电镀镍 -&gt; 电镀金<br></li>\n<li>硬金：酸洗 -&gt; 电镀镍 -&gt; 预镀金（闪金） -&gt; 电镀金镍或者金钴合金<br></li>\n<li></li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-org3bfdc9b\" class=\"outline-4\">\n<h4 id=\"org3bfdc9b\">预镀金（闪金）：Flash Gold</h4>\n<div class=\"outline-text-4\" id=\"text-org3bfdc9b\">\n<p>\n闪金来自英文：Flash. 意思就是快速镀金。是电镀硬金的预镀金程序。它使用较大的电流和含金浓度较浓的液槽，先在镍层形成一层密度比较细致，比较薄的镀金层，以便与后续电镀硬金的操作。<br>\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgced0048\" class=\"outline-4\">\n<h4 id=\"orgced0048\">电镀</h4>\n<div class=\"outline-text-4\" id=\"text-orgced0048\">\n<p>\n电镀的目地就是把金镀于电路板的铜皮上。但是金与铜之间直接接触会有电子迁移扩散的物理反应。所以需要先镀一层镍作为隔离层，然后再把金镀在镍的上面<br>\n所以一般所谓的电镀金，其实名字应该叫做电镀镍金。<br>\n</p>\n</div>\n</div>\n<div id=\"outline-container-org3e10a79\" class=\"outline-4\">\n<h4 id=\"org3e10a79\">assert &amp; deassert</h4>\n<div class=\"outline-text-4\" id=\"text-org3e10a79\">\n<p>\nassert: Drive a signal to its active voltage level, either high or low.<br>\ndeassert: Drive a signal to its inactive voltage level, either high or low.<br>\n</p>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-orgecb5acd\" class=\"outline-2\">\n<h2 id=\"orgecb5acd\">蓝牙 (bluetooth)</h2>\n<div class=\"outline-text-2\" id=\"text-orgecb5acd\">\n</div>\n<div id=\"outline-container-orgebd9e87\" class=\"outline-3\">\n<h3 id=\"orgebd9e87\">协议</h3>\n<div class=\"outline-text-3\" id=\"text-orgebd9e87\">\n</div>\n<div id=\"outline-container-org761551e\" class=\"outline-4\">\n<h4 id=\"org761551e\">GAP(Generic Access Profile)</h4>\n<div class=\"outline-text-4\" id=\"text-org761551e\">\n<p>\nGAP 用来控制设备的连接和固阳广播。GAP 使设备可见，并决定了设备是否可以连接，或者以怎样的方式连接。比如 Beacon 协议就只是向外进行广播，并不能被连接<br>\n小米手环就能可以和中心设备（手机）连接。<br>\n</p>\n</div>\n<ul class=\"org-ul\">\n<li><a id=\"org59646b5\"></a>设备角色：<br>\n<div class=\"outline-text-5\" id=\"text-org59646b5\">\n<p>\n在 GAP 中分为几个角色，主要的两个为：<br>\n</p>\n<ul class=\"org-ul\">\n<li>外围设备 (perpheral): 一般是非常小，或者简单的低功耗设备，用来提供数据，可以连接到中心设备，例如小米手环。<br></li>\n<li>中心设备 (central): 中心设备一般功能比较强大，用来连接外围设备。比如手机。<br></li>\n</ul>\n</div>\n</li>\n<li><a id=\"orgd9ae45d\"></a>广播数据<br>\n<div class=\"outline-text-5\" id=\"text-orgd9ae45d\">\n<p>\n在外围设备中，外围设备通过两种方式向外发送广播数据。Advertising Data Payload(广播数据) 和 Scan Response Data Payload(扫描回复)。 每种数据最长长度为 31 字节。<br>\n两种广播方式中，广播数据是必须的，因为外围设备需要发送广播数据，让中心设备知道外围设备的存在。扫描回复是可选的，中心设备可以向外围设备请求扫描回复，可以获取一些额外的信息。<br>\n如设备的名称，或者其他的信息。<br>\n</p>\n</div>\n</li>\n<li><a id=\"org8b6f2ca\"></a>广播流程<br>\n<div class=\"outline-text-5\" id=\"text-org8b6f2ca\">\n\n<div id=\"org9bb0ef4\" class=\"figure\">\n<p><img src=\"/2019/10/20/pcb/gap_broadcasting.png\"><br>\n</p>\n</div>\n\n\n\n<p>\n从上图，可以看出，外围设备会定义一个广播周期，在每个广播周期都发送广播。广播时间周期越长，越省电，但是也越不容易发现。<br>\n</p>\n</div>\n</li>\n<li><a id=\"org4e61a57\"></a>拓扑结构<br>\n<div class=\"outline-text-5\" id=\"text-org4e61a57\">\n\n<div id=\"org8207e5a\" class=\"figure\">\n<p><img src=\"/2019/10/20/pcb/gap_topology.png\"><br>\n</p>\n</div>\n\n<p>\n如上图所示，大部份情况下，外围设备通过广播的方式，让中心设备发现自己，从而建立 GATT 连接从而可以传输更多的数据。有些时候不需要建立<br>\nGATT 连接，外设只需要发射自己的广播即可。这样可以将外围设备的数据传输给多个接收方。因为 GATT 中只能是一个外设一个中心设备之间建立连接并通信。<br>\niBeacon 就使用广播的方式来传输数据给多个接收方。<br>\n</p>\n</div>\n</li>\n</ul>\n</div>\n<div id=\"outline-container-org3cf753a\" class=\"outline-4\">\n<h4 id=\"org3cf753a\">GATT (Generic Attribute Profile, 通用属性协议)</h4>\n<div class=\"outline-text-4\" id=\"text-org3cf753a\">\n<p>\nGATT 定义了两个 BLE 设备通过 Service(服务) 和 Characteristic (特征) 的东西进行通信。<br>\nGATT 协议是独占的，也就是说一个外设只能和一个中心设备进行连接。一旦外设完成连接，它就会立即停止广播，这样对其他设备就不可见了。当设备断开，它又开始广播。<br>\nGATT 基于 ATT (Attribute Protocol). ATT 协议把 Service, Characteristic 保存在一个查找表中，使用 16 bit 的 ID 来进行查找。<br>\n</p>\n</div>\n\n<ul class=\"org-ul\">\n<li><a id=\"orgde4cca3\"></a>拓扑结构<br>\n<div class=\"outline-text-5\" id=\"text-orgde4cca3\">\n\n<div id=\"org129ce64\" class=\"figure\">\n<p><img src=\"/2019/10/20/pcb/gatt_topology.png\"><br>\n</p>\n</div>\n\n<p>\n从上图可以看出，对于 GATT 协议来讲，一个外围设备只能连接一个中心设备，但是一个中心设备可以连接多个外围设备。一旦建立了 GATT 连接，通信就会变成双向的了。<br>\n对比 GAP 协议的广播拓扑， GAP 协议是单向的。在 GATT 协议上，如果两个外设需要通信，需要使用中心设备进行中转才能进行通信。<br>\n</p>\n</div>\n</li>\n<li><a id=\"orgdf6615c\"></a>GATT 通信事务<br>\n<div class=\"outline-text-5\" id=\"text-orgdf6615c\">\n<p>\nGATT 通信的双方是 C/S 关系。外设做为 GATT 的服务端，维护了 ATT 的查找表，以及 service 和 characteristic 的定义。中心设备是 GATT 客户端，向服务端发送请求。<br>\n在 GATT 所有的通信事务中，所有的事件都是由客户端发起（中心设备），由服务器响应（外部设备）。<br>\n</p>\n\n<p>\n在 GATT 连接建立后，外部设备会给中心设备一个建议的间隔，中心设备会在每个间隔去重新连接外部设备，检查是否有新数据。<br>\n</p>\n\n\n<div id=\"orgcf26661\" class=\"figure\">\n<p><img src=\"/2019/10/20/pcb/gatt_transactions.png\"><br>\n</p>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</body></html>","prev":{"title":"高效能实践","link":"2019/10/29/productivity-practices"},"next":{"title":"Linux emacs clangd 配置","link":"2019/10/08/emacs-clangd-config"},"plink":"https://kopinions.com/2019/10/20/pcb/","toc":[{"id":"org9c929b0","title":"pcb 制造","index":"1","children":[{"id":"org5dcec91","title":"缩写","index":"1.1"},{"id":"org235f7ec","title":"pcb 制造行业术语","index":"1.2"}]},{"id":"orgecb5acd","title":"蓝牙 (bluetooth)","index":"2","children":[{"id":"orgebd9e87","title":"协议","index":"2.1"}]}],"reading_time":"1468 字约 10 分钟"}